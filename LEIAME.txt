			**   Manual do gPalestra  **
			**		                  **
			****************************

** Este programa poderá ser reutilizado para qualquer fim não lucrativo **
** Favor, citar autores: Cristiano Cardoso, Marcos Moura,               ** 
** Márcia Andréa e Lucas Lintomen                                       **
** Dedicado à professora Genaina, da UnB (Universidade de Brasília)     **
***                                                                    ***

-- 0. Observações --
! Este arquivo contém informações básicas sobre o projeto. Peçamos que 
seja lido, sem falta, o arquivo "Relatório TP2.pdf". Isso porque nele
há informações detalhadas e de fácil leitura sobre o projeto. Acreditamos
que sim o arquivo de texto puro deve ser amplamente usado em programas 
de cunho profissional por conta de sua acessibilidade. Porém, com intuito 
de facilitar a interação alunos-monitor peçamos que seja feita a leitura
do pdf.

-- 1. Como Compilar --
! Não se esqueça de:
a) Possuir o JDK 8. Para instalar utilize os seguintes comandos:

sudo add-apt-repository ppa:webupd8team/java
sudo apt-get update
sudo apt-get install oracle-java8-installer

b) Possuir a IDE Eclipse Mars 1. Faça o download do instalador em:

http://www.eclipse.org/downloads/index.php?show_instructions=TRUE

c) Importar o projeto no Eclipse:
> Abra o Eclipse
> Vá em File > Import > General > Archive File
> Selecione o .zip que foi baixado do Moodle
> Ele deve importar todas as preferências do projeto, caso não o faça
contate o responsável pelo envio.

Obs: Geralmente a dependência de nosso projeto, JUnit 4, já vem instalada no Eclipse.

! Agora, com o projeto devidamente importado, você está pronto para compila-lo na IDE.

a) Vá em File > Export > Runnable JAR file
> Em "Launch configuration" você poderá escolher o programa para rodar
no modo normal (Principal - gPalestra) ou modo JUnit (test_runner - gPalestra)

> Clique em Finish e tudo estará certo

-- 2. Como usar --
! Nosso arquivo comprimido já com o com o .jar se houver algum inconveniente  na hora
de compilar.

a) Abra o terminal
b) Vá até a pasta onde você importou o .zip com o Eclipse usando o comando "cd"
c) Entre com o comando:
java -jar gPalestra.jar


Obs: Se no terminal aparecer algumas letras estranhas, é porque você está executando
este programa no Windows, provavelmente. Ele foi desenvolvido em Unix, então peçamos
que o use de preferência. Até porque eu (desenvolvedor) já enfrentei alguns problemas
com o mesmo enquanto programava, porém não tenho nada contra - só inexperiência.


! O programa irá ler do arquivo Palestrantes.txt, Palestras.txt e Localidades.txt
na raiz do a fim de gerar um arquivo saída ao usuário contendo uma lista, em ordem cronológica,
das palestras confirmadas com sucesso.

! Caso alguma palestra não possa ser alocada, o programa automaticamente interrompe o
processamento e envia uma exceção (erro) detalhando qual palestra não pôde ser alocada.


-- 3. Versões --
0.1 - 	Primeira versão do gPalesta! Implementa os módulos básicos de leitura,
tratamento e persistência de dados referentes a palestrantes e palestra. Versão
em C cancelada (vide relatório em pdf), porém com implementação de módulo de testes
CUnit para funcionalidade de leitura e tratamento de dados. E versão Java com todos
os módulos implementados (programa funcional), todavia sem módulo JUnit.

0.2 -	Nesta implementamos testes básicos do JUnit, documentação em JavaDoc, rodamos
o FindBugs para coletar erros estáticos no projeto (laudo no .zip) e incluímos o
componente localidade, bem como reformulamos toda a estrutura do mesmo.

-- 4. Informações Extras --


Considera-se que o 'TP2' de Programação Sistemática foi um sucesso.

